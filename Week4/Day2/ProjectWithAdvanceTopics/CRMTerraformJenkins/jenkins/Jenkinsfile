pipeline {
  agent any
  environment {
    AWS_REGION = 'us-east-1'
    ECR_REGISTRY = '866934333672.dkr.ecr.us-east-1.amazonaws.com'  # Replace with your ECR
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: "${env.BRANCH_NAME}", url: 'https://github.com/<your-username>/CRMTerraformJenkins.git'
      }
    }
    stage('Build Docker Images') {
      steps {
        script {
          sh 'docker build -t ${ECR_REGISTRY}/${BRANCH_NAME}-crm-api:latest ./app/crm-api'
          sh 'docker build -t ${ECR_REGISTRY}/${BRANCH_NAME}-crm-ui:latest ./app/crm-ui'
          sh 'docker build -t ${ECR_REGISTRY}/${BRANCH_NAME}-crm-analytics:latest ./app/crm-analytics'
        }
      }
    }
    stage('Push to ECR') {
      steps {
        script {
          sh 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}'
          sh 'docker push ${ECR_REGISTRY}/${BRANCH_NAME}-crm-api:latest'
          sh 'docker push ${ECR_REGISTRY}/${BRANCH_NAME}-crm-ui:latest'
          sh 'docker push ${ECR_REGISTRY}/${BRANCH_NAME}-crm-analytics:latest'
        }
      }
    }
    stage('Deploy Terraform') {
      steps {
        dir('terraform') {
          sh 'terraform init -backend-config="bucket=crm-tf-state-2025"'
          sh 'terraform workspace select ${BRANCH_NAME} || terraform workspace new ${BRANCH_NAME}'
          sh 'terraform apply -auto-approve'
        }
      }
    }
  }
}
